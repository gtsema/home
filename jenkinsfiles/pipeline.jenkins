#!groovy

properties([disableConcurrentBuilds()])

pipeline {
    agent {
        label 'master'
        }
    triggers {
        pollSCM('0 * * * *')
    }
    options {
        buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
        timestamps()
    }
    stages {
        stage("maven create war-package...") {
            steps {
                sh 'mvn clean package'
                echo "stage successfully!"
            }
        }
        stage("Jenkins deploy war-package to tomcat...") {
            environment {
                TOMCAT_USER = 'war-deployer'
                TOMCAT_PASSWORD = 'jenkins-tomcat-deploy'
                WAR_PATH = '/var/lib/jenkins/workspace/home-deploy-tomcat/target/home.war'
                TOMCAT_HOST = 'http://localhost'
                TOMCAT_PORT = '8080'
                CONTEX_NAME = 'home'
            }
            steps {
                sh'''
                CURL_RESPONSE=(curl -v -u $TOMCAT_USER:$TOMCAT_PASSWORD -T $WAR_PATH \\"http://$TOMCAT_HOST:$TOMCAT_PORT/manager/text/deploy?path=/$CONTEX_NAME&update=true\\")
                if [[ $CURL_RESPONSE == *\\"FAIL\\"* ]]; then
                echo \\"war deployment failed\\"
                exit 1
                else
                echo \\"war deployed successfully \\
                exit 0
                fi
                '''
                echo "stage successfully!"
            }
        }
    }
}